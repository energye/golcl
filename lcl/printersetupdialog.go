//----------------------------------------
// The code is automatically generated by the GenlibLcl tool.
// Copyright © ying32. All Rights Reserved.
//
// Licensed under Apache License 2.0
//
//----------------------------------------

package lcl

import (
	. "github.com/energye/golcl/lcl/api"
	. "github.com/energye/golcl/lcl/types"
	"unsafe"
)

type TPrinterSetupDialog struct {
	IComponent
	instance unsafe.Pointer
}

// NewPrinterSetupDialog
//
// 创建一个新的对象。
//
// Create a new object.
func NewPrinterSetupDialog(owner IComponent) *TPrinterSetupDialog {
	p := new(TPrinterSetupDialog)
	p.instance = unsafe.Pointer(PrinterSetupDialog_Create(CheckPtr(owner)))
	return p
}

// AsPrinterSetupDialog
//
// 动态转换一个已存在的对象实例。
//
// Dynamically convert an existing object instance.
func AsPrinterSetupDialog(obj interface{}) *TPrinterSetupDialog {
	instance := getInstance(obj)
	if instance == nullptr {
		return nil
	}
	return &TPrinterSetupDialog{instance: instance}
}

// Free
//
// 释放对象。
//
// Free object.
func (p *TPrinterSetupDialog) Free() {
	if p.instance != nullptr {
		PrinterSetupDialog_Free(p._instance())
		p.instance = nullptr
	}
}

func (p *TPrinterSetupDialog) _instance() uintptr {
	return uintptr(p.instance)
}

// Instance
//
// 返回对象实例指针。
//
// Return object instance pointer.
func (p *TPrinterSetupDialog) Instance() uintptr {
	return p._instance()
}

// UnsafeAddr
//
// 获取一个不安全的地址。
//
// Get an unsafe address.
func (p *TPrinterSetupDialog) UnsafeAddr() unsafe.Pointer {
	return p.instance
}

// IsValid
//
// 检测地址是否为空。
//
// Check if the address is empty.
func (p *TPrinterSetupDialog) IsValid() bool {
	return p.instance != nullptr
}

// Is
//
// 检测当前对象是否继承自目标对象。
//
// Checks whether the current object is inherited from the target object.
func (p *TPrinterSetupDialog) Is() TIs {
	return TIs(p._instance())
}

// As
//
// 动态转换当前对象为目标对象。
//
// Dynamically convert the current object to the target object.
//func (p *TPrinterSetupDialog) As() TAs {
//    return TAs(p._instance())
//}

// TPrinterSetupDialogClass
//
// 获取类信息指针。
//
// Get class information pointer.
func TPrinterSetupDialogClass() TClass {
	return PrinterSetupDialog_StaticClassType()
}

// Execute
//
// 执行。
func (p *TPrinterSetupDialog) Execute() bool {
	return PrinterSetupDialog_Execute(p._instance())
}

// FindComponent
//
// 查找指定名称的组件。
//
// Find the component with the specified name.
func (p *TPrinterSetupDialog) FindComponent(AName string) *TComponent {
	return AsComponent(PrinterSetupDialog_FindComponent(p._instance(), AName))
}

// GetNamePath
//
// 获取类名路径。
//
// Get the class name path.
func (p *TPrinterSetupDialog) GetNamePath() string {
	return PrinterSetupDialog_GetNamePath(p._instance())
}

// HasParent
//
// 是否有父容器。
//
// Is there a parent container.
func (p *TPrinterSetupDialog) HasParent() bool {
	return PrinterSetupDialog_HasParent(p._instance())
}

// Assign
//
// 复制一个对象，如果对象实现了此方法的话。
//
// Copy an object, if the object implements this method.
func (p *TPrinterSetupDialog) Assign(Source IObject) {
	PrinterSetupDialog_Assign(p._instance(), CheckPtr(Source))
}

// ClassType
//
// 获取类的类型信息。
//
// Get class type information.
func (p *TPrinterSetupDialog) ClassType() TClass {
	return PrinterSetupDialog_ClassType(p._instance())
}

// ClassName
//
// 获取当前对象类名称。
//
// Get the current object class name.
func (p *TPrinterSetupDialog) ClassName() string {
	return PrinterSetupDialog_ClassName(p._instance())
}

// InstanceSize
//
// 获取当前对象实例大小。
//
// Get the current object instance size.
func (p *TPrinterSetupDialog) InstanceSize() int32 {
	return PrinterSetupDialog_InstanceSize(p._instance())
}

// InheritsFrom
//
// 判断当前类是否继承自指定类。
//
// Determine whether the current class inherits from the specified class.
func (p *TPrinterSetupDialog) InheritsFrom(AClass TClass) bool {
	return PrinterSetupDialog_InheritsFrom(p._instance(), AClass)
}

// Equals
//
// 与一个对象进行比较。
//
// Compare with an object.
func (p *TPrinterSetupDialog) Equals(Obj IObject) bool {
	return PrinterSetupDialog_Equals(p._instance(), CheckPtr(Obj))
}

// GetHashCode
//
// 获取类的哈希值。
//
// Get the hash value of the class.
func (p *TPrinterSetupDialog) GetHashCode() int32 {
	return PrinterSetupDialog_GetHashCode(p._instance())
}

// ToString
//
// 文本类信息。
//
// Text information.
func (p *TPrinterSetupDialog) ToString() string {
	return PrinterSetupDialog_ToString(p._instance())
}

// Handle
//
// 获取控件句柄。
//
// Get Control handle.
func (p *TPrinterSetupDialog) Handle() HWND {
	return PrinterSetupDialog_GetHandle(p._instance())
}

func (p *TPrinterSetupDialog) SetOnClose(fn TNotifyEvent) {
	PrinterSetupDialog_SetOnClose(p._instance(), fn)
}

// SetOnShow
//
// 设置显示事件。
func (p *TPrinterSetupDialog) SetOnShow(fn TNotifyEvent) {
	PrinterSetupDialog_SetOnShow(p._instance(), fn)
}

// ComponentCount
//
// 获取组件总数。
//
// Get the total number of components.
func (p *TPrinterSetupDialog) ComponentCount() int32 {
	return PrinterSetupDialog_GetComponentCount(p._instance())
}

// ComponentIndex
//
// 获取组件索引。
//
// Get component index.
func (p *TPrinterSetupDialog) ComponentIndex() int32 {
	return PrinterSetupDialog_GetComponentIndex(p._instance())
}

// SetComponentIndex
//
// 设置组件索引。
//
// Set component index.
func (p *TPrinterSetupDialog) SetComponentIndex(value int32) {
	PrinterSetupDialog_SetComponentIndex(p._instance(), value)
}

// Owner
//
// 获取组件所有者。
//
// Get component owner.
func (p *TPrinterSetupDialog) Owner() *TComponent {
	return AsComponent(PrinterSetupDialog_GetOwner(p._instance()))
}

// Name
//
// 获取组件名称。
//
// Get the component name.
func (p *TPrinterSetupDialog) Name() string {
	return PrinterSetupDialog_GetName(p._instance())
}

// SetName
//
// 设置组件名称。
//
// Set the component name.
func (p *TPrinterSetupDialog) SetName(value string) {
	PrinterSetupDialog_SetName(p._instance(), value)
}

// Tag
//
// 获取对象标记。
//
// Get the control tag.
func (p *TPrinterSetupDialog) Tag() int {
	return PrinterSetupDialog_GetTag(p._instance())
}

// SetTag
//
// 设置对象标记。
//
// Set the control tag.
func (p *TPrinterSetupDialog) SetTag(value int) {
	PrinterSetupDialog_SetTag(p._instance(), value)
}

// Components
//
// 获取指定索引组件。
//
// Get the specified index component.
func (p *TPrinterSetupDialog) Components(AIndex int32) *TComponent {
	return AsComponent(PrinterSetupDialog_GetComponents(p._instance(), AIndex))
}
