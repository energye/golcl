//----------------------------------------
// The code is automatically generated by the GenlibLcl tool.
// Copyright © ying32. All Rights Reserved.
//
// Licensed under Apache License 2.0
//
//----------------------------------------

package lcl

import (
	. "github.com/energye/golcl/lcl/api"
	. "github.com/energye/golcl/lcl/types"
	"unsafe"
)

type TTaskDialogButtons struct {
	IObject
	instance unsafe.Pointer
}

// AsTaskDialogButtons
//
// 动态转换一个已存在的对象实例。
//
// Dynamically convert an existing object instance.
func AsTaskDialogButtons(obj interface{}) *TTaskDialogButtons {
	instance := getInstance(obj)
	if instance == nullptr {
		return nil
	}
	return &TTaskDialogButtons{instance: instance}
}

func (t *TTaskDialogButtons) _instance() uintptr {
	return uintptr(t.instance)
}

// Instance
//
// 返回对象实例指针。
//
// Return object instance pointer.
func (t *TTaskDialogButtons) Instance() uintptr {
	return t._instance()
}

// UnsafeAddr
//
// 获取一个不安全的地址。
//
// Get an unsafe address.
func (t *TTaskDialogButtons) UnsafeAddr() unsafe.Pointer {
	return t.instance
}

// IsValid
//
// 检测地址是否为空。
//
// Check if the address is empty.
func (t *TTaskDialogButtons) IsValid() bool {
	return t.instance != nullptr
}

// Is
//
// 检测当前对象是否继承自目标对象。
//
// Checks whether the current object is inherited from the target object.
func (t *TTaskDialogButtons) Is() TIs {
	return TIs(t._instance())
}

// As
//
// 动态转换当前对象为目标对象。
//
// Dynamically convert the current object to the target object.
//func (t *TTaskDialogButtons) As() TAs {
//    return TAs(t._instance())
//}

// TTaskDialogButtonsClass
//
// 获取类信息指针。
//
// Get class information pointer.
func TTaskDialogButtonsClass() TClass {
	return TaskDialogButtons_StaticClassType()
}

func (t *TTaskDialogButtons) Add() *TTaskDialogBaseButtonItem {
	return AsTaskDialogBaseButtonItem(TaskDialogButtons_Add(t._instance()))
}

func (t *TTaskDialogButtons) FindButton(AModalResult TModalResult) *TTaskDialogBaseButtonItem {
	return AsTaskDialogBaseButtonItem(TaskDialogButtons_FindButton(t._instance(), AModalResult))
}

// Owner
//
// 组件所有者。
//
// component owner.
func (t *TTaskDialogButtons) Owner() *TObject {
	return AsObject(TaskDialogButtons_Owner(t._instance()))
}

// Assign
//
// 复制一个对象，如果对象实现了此方法的话。
//
// Copy an object, if the object implements this method.
func (t *TTaskDialogButtons) Assign(Source IObject) {
	TaskDialogButtons_Assign(t._instance(), CheckPtr(Source))
}

func (t *TTaskDialogButtons) BeginUpdate() {
	TaskDialogButtons_BeginUpdate(t._instance())
}

// Clear
//
// 清除。
func (t *TTaskDialogButtons) Clear() {
	TaskDialogButtons_Clear(t._instance())
}

func (t *TTaskDialogButtons) Delete(Index int32) {
	TaskDialogButtons_Delete(t._instance(), Index)
}

func (t *TTaskDialogButtons) EndUpdate() {
	TaskDialogButtons_EndUpdate(t._instance())
}

func (t *TTaskDialogButtons) FindItemID(ID int32) *TCollectionItem {
	return AsCollectionItem(TaskDialogButtons_FindItemID(t._instance(), ID))
}

// GetNamePath
//
// 获取类名路径。
//
// Get the class name path.
func (t *TTaskDialogButtons) GetNamePath() string {
	return TaskDialogButtons_GetNamePath(t._instance())
}

func (t *TTaskDialogButtons) Insert(Index int32) *TCollectionItem {
	return AsCollectionItem(TaskDialogButtons_Insert(t._instance(), Index))
}

// ClassType
//
// 获取类的类型信息。
//
// Get class type information.
func (t *TTaskDialogButtons) ClassType() TClass {
	return TaskDialogButtons_ClassType(t._instance())
}

// ClassName
//
// 获取当前对象类名称。
//
// Get the current object class name.
func (t *TTaskDialogButtons) ClassName() string {
	return TaskDialogButtons_ClassName(t._instance())
}

// InstanceSize
//
// 获取当前对象实例大小。
//
// Get the current object instance size.
func (t *TTaskDialogButtons) InstanceSize() int32 {
	return TaskDialogButtons_InstanceSize(t._instance())
}

// InheritsFrom
//
// 判断当前类是否继承自指定类。
//
// Determine whether the current class inherits from the specified class.
func (t *TTaskDialogButtons) InheritsFrom(AClass TClass) bool {
	return TaskDialogButtons_InheritsFrom(t._instance(), AClass)
}

// Equals
//
// 与一个对象进行比较。
//
// Compare with an object.
func (t *TTaskDialogButtons) Equals(Obj IObject) bool {
	return TaskDialogButtons_Equals(t._instance(), CheckPtr(Obj))
}

// GetHashCode
//
// 获取类的哈希值。
//
// Get the hash value of the class.
func (t *TTaskDialogButtons) GetHashCode() int32 {
	return TaskDialogButtons_GetHashCode(t._instance())
}

// ToString
//
// 文本类信息。
//
// Text information.
func (t *TTaskDialogButtons) ToString() string {
	return TaskDialogButtons_ToString(t._instance())
}

func (t *TTaskDialogButtons) DefaultButton() *TTaskDialogBaseButtonItem {
	return AsTaskDialogBaseButtonItem(TaskDialogButtons_GetDefaultButton(t._instance()))
}

func (t *TTaskDialogButtons) SetDefaultButton(value *TTaskDialogBaseButtonItem) {
	TaskDialogButtons_SetDefaultButton(t._instance(), CheckPtr(value))
}

func (t *TTaskDialogButtons) Count() int32 {
	return TaskDialogButtons_GetCount(t._instance())
}

func (t *TTaskDialogButtons) Items(Index int32) *TTaskDialogBaseButtonItem {
	return AsTaskDialogBaseButtonItem(TaskDialogButtons_GetItems(t._instance(), Index))
}

func (t *TTaskDialogButtons) SetItems(Index int32, value *TTaskDialogBaseButtonItem) {
	TaskDialogButtons_SetItems(t._instance(), Index, CheckPtr(value))
}
